{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projects/izzielau.github.io/src/views/spotify/Spotify.js\";\nimport React from 'react';\nimport './Spotify.css';\nimport Button from '../../components/Button';\nimport ExternalButton from '../../components/ExternalButton';\nimport genres from \"./../../assets/spotify-demos/genres.png\";\nimport popularity from \"./../../assets/spotify-demos/popularity.png\";\nimport rhizomeROC from \"./../../assets/spotify-demos/rhizome_roc.png\";\n\nfunction Spotify() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spotify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backbutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    link: \"/software\",\n    text: \"Back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"text\", {\n    class: \"big-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"machine learning & spotify\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"text-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    class: \"small-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"I've been playing piano since the age of four, singing (perhaps out-of-tune) since the age of six, and listening to Spotify at least three hours a day since I first got a Premium account in college. I discovered the Spotify API after researching a little bit about Spotify Wrapped and decided I wanted to do more research about my personal listening habits!\"), /*#__PURE__*/React.createElement(\"text\", {\n    class: \"small-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"This page will dive into the projects that I was able to create using the API:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Did exploratory data analysis to find my favorite genres and artists\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Trained a linear regression model to predict whether I'd like a song\"))), /*#__PURE__*/React.createElement(\"text\", {\n    class: \"small-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"I used Jupyter Notebook, pandas, matplotlib, requests, seaborn, numpy, and scikit-learn for this project.\"), /*#__PURE__*/React.createElement(\"a\", {\n    name: \"exploration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, \"Exploration\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, \"I first explored which genres I listened to the most by aggregating each genres' appearance in the list of genres corresponding to my top 20 artists.\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"image\",\n    src: genres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, \"I noticed that the API returns a feature called \\\"popularity\\\" for each artist, and have always been a little curious about whether the music I listen to is mainstream. To find out, I graphed the correlation between artist ranking and popularity:\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"image\",\n    src: popularity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, \"With an r-value of -0.44945735259442465, I'd say there is definitely a chance that this could be true. A negative r-value of this magnitude could imply that my more popular artists have higher popularity scores-- a.k.a. a negative correlation between personal preference and artist popularity.\"), /*#__PURE__*/React.createElement(\"a\", {\n    name: \"model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"small-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Logistic Regression Model\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"small-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, \"I personally have had a variety of hit-and-misses with Spotify's recommendations algorithm. When I saw that the API could return certain features of song tracks, I wanted to see if I could build myself a personalized recommendations algorithm using these features and the information that I know about my personal preferences.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"The features for each track returned by the API include:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 27\n    }\n  }, \"acousticness\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 27\n    }\n  }, \"danceability\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }\n  }, \"energy\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }\n  }, \"instrumentalness\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }, \"key\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 27\n    }\n  }, \"liveness\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }, \"loudness\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }\n  }, \"speechiness\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, \"tempo\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }\n  }, \"time signature\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 27\n    }\n  }, \"valence\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, \"Using the API, I pulled 552 songs from my own playlists and my friends' playlists and added a 0 (dislike) and 1 (like) label to each song. I cleaned the data and prepared it for training, including changes such as:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 27\n    }\n  }, \"one-hot-encoding the \\\"key\\\" column\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }\n  }, \"filling null values\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }, \"removing time signature as a feature after realizing most values were missing or redundant (i.e. all 4's) or incorrect (i.e. 0)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, \"Afterwards I did a 9:1 split of the data and trained a Logistic Regression model on the data using scikit-learn. With just these basic features, the model reached:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }\n  }, \"Training accuracy of 78.47%\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }\n  }, \"Validation accuracy of 71.43%\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Plotting the ROC curve of the model reveals:\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"image\",\n    src: rhizomeROC,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, \"I also wanted to test how well the model responds to new data, so I created a completely new playlist of 40 songs I've never listened to before and had the model predict 0-1 labels of preference. I listened to the songs and manually labeled them, and then calculated the model's accuracy to be 65%.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, \"This wasn't as stastically significant as I wanted it to be (p=0.04). Some ideas I have moving forward in the next iteration of this model are to add:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }\n  }, \"Add genre as a feature\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }\n  }, \"Add artist name as a feature\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 27\n    }\n  }, \"Add album name as a feature\")))));\n}\n\nexport default Spotify;","map":{"version":3,"sources":["/Users/mac/Desktop/projects/izzielau.github.io/src/views/spotify/Spotify.js"],"names":["React","Button","ExternalButton","genres","popularity","rhizomeROC","Spotify"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './Spotify.css';\n\nimport Button from '../../components/Button';\nimport ExternalButton from '../../components/ExternalButton';\n\nimport genres from \"./../../assets/spotify-demos/genres.png\"\nimport popularity from \"./../../assets/spotify-demos/popularity.png\"\nimport rhizomeROC from \"./../../assets/spotify-demos/rhizome_roc.png\"\n\nfunction Spotify() {\n    return (\n    <div class=\"spotify\">\n        <div className=\"backbutton\">\n            <Button link=\"/software\" text=\"Back\"/>\n        </div>\n        <text class=\"big-text\">machine learning & spotify</text>\n        <div class=\"text-container\">\n            <text class=\"small-text\"> \n            I've been playing piano since the age of four, singing (perhaps out-of-tune) since the age of six, and listening to Spotify at least three hours a day since I first got a Premium account in college.\n            I discovered the Spotify API after researching a little bit about Spotify Wrapped and decided I wanted to do more research about my personal listening habits!\n            </text>\n            <text class=\"small-text\"> \n            This page will dive into the projects that I was able to create using the API:\n            <ul>\n                <li>Did exploratory data analysis to find my favorite genres and artists</li>\n                <li>Trained a linear regression model to predict whether I'd like a song</li>\n            </ul>\n            </text>\n            <text class=\"small-text\">\n            I used Jupyter Notebook, pandas, matplotlib, requests, seaborn, numpy, and scikit-learn for this project.\n            </text>\n            <a name=\"exploration\">\n                      <div className=\"spacer\" />\n                  </a>\n                  <div className=\"subtitle\">\n                      Exploration\n                  </div>\n                  <div className=\"text\">\n                      I first explored which genres I listened to the most by aggregating each genres' appearance in the list\n                      of genres corresponding to my top 20 artists.\n                  </div>\n                  <img className=\"image\" src={genres} />\n                  <div className=\"text\">\n                      I noticed that the API returns a feature called \"popularity\" for each artist, and have always been a little\n                      curious about whether the music I listen to is mainstream. To find out, I graphed the correlation between\n                      artist ranking and popularity:\n                  </div>\n                  <img className=\"image\" src={popularity} />\n                  <div className=\"text\">\n                      With an r-value of -0.44945735259442465, I'd say there is definitely a chance that this could be true. A\n                      negative r-value of this magnitude could imply that my more popular artists have higher popularity scores--\n                      a.k.a. a negative correlation between personal preference and artist popularity.\n                  </div>\n\n                  <a name=\"model\">\n                      <div className=\"spacer\" />\n                  </a>\n                  <div className=\"small-text\">\n                      Logistic Regression Model\n                  </div>\n                  <div className=\"small-text\">\n                      I personally have had a variety of hit-and-misses with Spotify's recommendations algorithm. When I saw that\n                      the API could return certain features of song tracks, I wanted to see if I could build myself a personalized\n                      recommendations algorithm using these features and the information that I know about my personal preferences.\n                  </div>\n                  <div className=\"text\">\n                      The features for each track returned by the API include:\n                      <ul>\n                          <li>acousticness</li>\n                          <li>danceability</li>\n                          <li>energy</li>\n                          <li>instrumentalness</li>\n                          <li>key</li>\n                          <li>liveness</li>\n                          <li>loudness</li>\n                          <li>speechiness</li>\n                          <li>tempo</li>\n                          <li>time signature</li>\n                          <li>valence</li>\n                      </ul>\n                  </div>\n                  <div className=\"text\">\n                      Using the API, I pulled 552 songs from my own playlists and my friends' playlists and added a 0 (dislike)\n                      and 1 (like) label to each song. I cleaned the data and prepared it for training, including changes such as:\n                      <ul>\n                          <li>one-hot-encoding the \"key\" column</li>\n                          <li>filling null values</li>\n                          <li>removing time signature as a feature after realizing most values were missing or redundant (i.e.\n                              all 4's) or incorrect (i.e. 0)</li>\n                      </ul>\n                  </div>\n                  <div className=\"text\">\n                      Afterwards I did a 9:1 split of the data and trained a Logistic Regression model on the data using\n                      scikit-learn. With just these basic features, the model reached:\n                      <ul>\n                          <li>Training accuracy of 78.47%</li>\n                          <li>Validation accuracy of 71.43%</li>\n                      </ul>\n                  </div>\n                  <div className=\"text\">\n                      Plotting the ROC curve of the model reveals:\n                  </div>\n                  <img className=\"image\" src={rhizomeROC} />\n                  <div className=\"text\">\n                      I also wanted to test how well the model responds to new data, so I created a completely new playlist of\n                      40 songs I've never listened to before and had the model predict 0-1 labels of preference. I listened to the\n                      songs and manually labeled them, and then calculated the model's accuracy to be 65%.\n                  </div>\n                  <div className=\"text\">\n                      This wasn't as stastically significant as I wanted it to be (p=0.04). Some ideas I have moving forward in\n                      the next iteration of this model are to add:\n                      <ul>\n                          <li>Add genre as a feature</li>\n                          <li>Add artist name as a feature</li>\n                          <li>Add album name as a feature</li>\n                      </ul>\n                </div>\n        </div>\n        \n    </div>\n  );\n}\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import Tag from'../../components/Tag.js';import'./Spotify.css';import BackButton from'../../components/BackButton.js';import gen from\"./../../assets/spotify-demos/genres.png\";import pop from\"./../../assets/spotify-demos/popularity.png\";import roc from\"./../../assets/spotify-demos/rhizome_roc.png\";function Spotify(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{class:\"back\"},/*#__PURE__*/React.createElement(BackButton,{text:\"\\u2190 BACK\",link:\"/\"})),/*#__PURE__*/React.createElement(\"div\",{class:\"spotify\"},/*#__PURE__*/React.createElement(\"div\",{class:\"heading\"},/*#__PURE__*/React.createElement(\"p\",{class:\"title\"},\"Spotify\"),/*#__PURE__*/React.createElement(\"p\",{class:\"subtitle\"},\"Self-designed project\"),/*#__PURE__*/React.createElement(\"p\",{class:\"subtitle\"},\"A project built using the Spotify API and data from 3 years of listening habits. Inspired by my data science and ML courses, fueled by my love for music.\")),/*#__PURE__*/React.createElement(\"div\",{class:\"content\"},/*#__PURE__*/React.createElement(\"div\",{class:\"tag-row\"},/*#__PURE__*/React.createElement(Tag,{text:\"Machine Learning\"}),/*#__PURE__*/React.createElement(Tag,{text:\"Data Science\"}),/*#__PURE__*/React.createElement(Tag,{text:\"Software Engineering\"})),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" \",/*#__PURE__*/React.createElement(\"b\",null,\" Exploration \"),\" \"),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" I first explored which genres I listened to the most by aggregating each genres' appearance in the list of genres corresponding to my top 20 artists. \"),/*#__PURE__*/React.createElement(\"div\",{class:\"imageContainer\"},/*#__PURE__*/React.createElement(\"img\",{class:\"image\",src:gen})),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" I noticed that the API returns a feature called \\\"popularity\\\" for each artist, and have always been a little curious about whether the music I listen to is mainstream. To find out, I graphed the correlation between artist ranking and popularity: \"),/*#__PURE__*/React.createElement(\"div\",{class:\"imageContainer\"},/*#__PURE__*/React.createElement(\"img\",{className:\"image\",src:pop})),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" With an r-value of -0.44945735259442465, I'd say there is definitely a chance that this could be true. A negative r-value of this magnitude could imply that my more popular artists have higher popularity scores-- a.k.a. a negative correlation between personal preference and artist popularity. \"),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" \",/*#__PURE__*/React.createElement(\"b\",null,\" Modeling \"),\" \"),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" I personally have had a variety of hit-and-misses with Spotify's recommendations algorithm. When I saw that the API could return certain features of song tracks, I wanted to see if I could build myself a personalized                   recommendations algorithm using these features and the information that I know about my personal preferences. \"),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" The features for each track returned by the API include:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"acousticness\"),/*#__PURE__*/React.createElement(\"li\",null,\"danceability\"),/*#__PURE__*/React.createElement(\"li\",null,\"energy\"),/*#__PURE__*/React.createElement(\"li\",null,\"instrumentalness\"),/*#__PURE__*/React.createElement(\"li\",null,\"key\"),/*#__PURE__*/React.createElement(\"li\",null,\"liveness\"),/*#__PURE__*/React.createElement(\"li\",null,\"loudness\"),/*#__PURE__*/React.createElement(\"li\",null,\"speechiness\"),/*#__PURE__*/React.createElement(\"li\",null,\"tempo\"),/*#__PURE__*/React.createElement(\"li\",null,\"time signature\"),/*#__PURE__*/React.createElement(\"li\",null,\"valence\"))),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" Using the API, I pulled 552 songs from my own playlists and my friends' playlists and added a 0 (dislike) and 1 (like) label to each song. I cleaned the data and prepared it for training, including changes such as:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"one-hot-encoding the \\\"key\\\" column\"),/*#__PURE__*/React.createElement(\"li\",null,\"filling null values\"),/*#__PURE__*/React.createElement(\"li\",null,\"removing time signature as a feature after realizing most values were missing or redundant (i.e. all 4's) or incorrect (i.e. 0)\"))),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\"  Afterwards I did a 9:1 split of the data and trained a Logistic Regression model on the data using scikit-learn. With just these basic features, the model reached:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Training accuracy of 78.47%\"),/*#__PURE__*/React.createElement(\"li\",null,\"Validation accuracy of 71.43%\"))),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" Plotting the ROC curve of the model reveals: \"),/*#__PURE__*/React.createElement(\"div\",{class:\"imageContainer\"},/*#__PURE__*/React.createElement(\"img\",{className:\"image\",src:roc})),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" I also wanted to test how well the model responds to new data, so I created a completely new playlist of 40 songs I've never listened to before as a test set. After I listened to the songs and manually labeled them as gold labels, i then calculated the model's accuracy on the test dataset to be 65%.\"),/*#__PURE__*/React.createElement(\"p\",{class:\"text\"},\" This was not a statistically significant result (p=0.04), but the API was fun to implement and showed some promising results! Some ideas I have moving forward in the next iteration of this model are to add:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Add genre as a feature\"),/*#__PURE__*/React.createElement(\"li\",null,\"Add artist name as a feature\"),/*#__PURE__*/React.createElement(\"li\",null,\"Add album name as a feature\"),/*#__PURE__*/React.createElement(\"li\",null,\"Incorporate other APIs for more external information\"))))));}export default Spotify;","map":{"version":3,"sources":["C:/Users/izz/OneDrive/Desktop/projects/izzielau.github.io/src/views/spotify/Spotify.js"],"names":["React","Tag","BackButton","gen","pop","roc","Spotify"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,yBAAhB,CAEA,MAAO,eAAP,CAEA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CAEA,MAAOC,CAAAA,GAAP,KAAgB,yCAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,6CAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,8CAAhB,CAEA,QAASC,CAAAA,OAAT,EAAmB,CACf,mBACI,4CACI,2BAAK,KAAK,CAAC,MAAX,eACI,oBAAC,UAAD,EAAY,IAAI,CAAC,aAAjB,CAA0B,IAAI,CAAC,GAA/B,EADJ,CADJ,cAII,2BAAK,KAAK,CAAC,SAAX,eACI,2BAAK,KAAK,CAAC,SAAX,eACI,yBAAG,KAAK,CAAC,OAAT,YADJ,cAEI,yBAAG,KAAK,CAAC,UAAT,0BAFJ,cAGI,yBAAG,KAAK,CAAC,UAAT,8JAHJ,CADJ,cAMI,2BAAK,KAAK,CAAC,SAAX,eACI,2BAAK,KAAK,CAAC,SAAX,eACI,oBAAC,GAAD,EAAK,IAAI,CAAC,kBAAV,EADJ,cAEI,oBAAC,GAAD,EAAK,IAAI,CAAC,cAAV,EAFJ,cAGI,oBAAC,GAAD,EAAK,IAAI,CAAC,sBAAV,EAHJ,CADJ,cAMI,yBAAG,KAAK,CAAC,MAAT,mBAAiB,6CAAjB,KANJ,cAOI,yBAAG,KAAK,CAAC,MAAT,4JAPJ,cAQI,2BAAK,KAAK,CAAC,gBAAX,eACI,2BAAK,KAAK,CAAC,OAAX,CAAmB,GAAG,CAAEH,GAAxB,EADJ,CARJ,cAWI,yBAAG,KAAK,CAAC,MAAT,6PAXJ,cAYI,2BAAK,KAAK,CAAC,gBAAX,eACI,2BAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEC,GAA5B,EADJ,CAZJ,cAeI,yBAAG,KAAK,CAAC,MAAT,4SAfJ,cAgBI,yBAAG,KAAK,CAAC,MAAT,mBAAiB,0CAAjB,KAhBJ,cAiBI,yBAAG,KAAK,CAAC,MAAT,+VAjBJ,cAkBI,yBAAG,KAAK,CAAC,MAAT,2EACI,2CACI,6CADJ,cAEI,6CAFJ,cAGI,uCAHJ,cAII,iDAJJ,cAKI,oCALJ,cAMI,yCANJ,cAOI,yCAPJ,cAQI,4CARJ,cASI,sCATJ,cAUI,+CAVJ,cAWI,wCAXJ,CADJ,CAlBJ,cAiCI,yBAAG,KAAK,CAAC,MAAT,yOACI,2CACA,oEADA,cAEA,oDAFA,cAGA,gKAHA,CADJ,CAjCJ,cAyCI,yBAAG,KAAK,CAAC,MAAT,uLACI,2CACA,4DADA,cAEA,8DAFA,CADJ,CAzCJ,cA+CI,yBAAG,KAAK,CAAC,MAAT,mDA/CJ,cAgDI,2BAAK,KAAK,CAAC,gBAAX,eACI,2BAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEC,GAA5B,EADJ,CAhDJ,cAmDI,yBAAG,KAAK,CAAC,MAAT,kTAnDJ,cAoDI,yBAAG,KAAK,CAAC,MAAT,iOACI,2CACI,uDADJ,cAEI,6DAFJ,cAGI,4DAHJ,cAII,qFAJJ,CADJ,CApDJ,CANJ,CAJJ,CADJ,CA2EH,CAED,cAAeC,CAAAA,OAAf","sourcesContent":["import React from 'react';\r\nimport Tag from '../../components/Tag.js'\r\n\r\nimport './Spotify.css';\r\n\r\nimport BackButton from '../../components/BackButton.js'\r\n\r\nimport gen from \"./../../assets/spotify-demos/genres.png\"\r\nimport pop from \"./../../assets/spotify-demos/popularity.png\"\r\nimport roc from \"./../../assets/spotify-demos/rhizome_roc.png\"\r\n\r\nfunction Spotify() {\r\n    return (\r\n        <div>\r\n            <div class='back'>\r\n                <BackButton text=\"← BACK\" link=\"/\"/>\r\n            </div>\r\n            <div class=\"spotify\">\r\n                <div class=\"heading\">\r\n                    <p class=\"title\">Spotify</p>\r\n                    <p class=\"subtitle\">Self-designed project</p>\r\n                    <p class=\"subtitle\">A project built using the Spotify API and data from 3 years of listening habits. Inspired by my data science and ML courses, fueled by my love for music.</p>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <div class=\"tag-row\">\r\n                        <Tag text=\"Machine Learning\"></Tag>\r\n                        <Tag text=\"Data Science\"></Tag>\r\n                        <Tag text=\"Software Engineering\"></Tag>\r\n                    </div>\r\n                    <p class=\"text\"> <b> Exploration </b> </p>\r\n                    <p class=\"text\"> I first explored which genres I listened to the most by aggregating each genres' appearance in the list of genres corresponding to my top 20 artists. </p>\r\n                    <div class=\"imageContainer\">\r\n                        <img class=\"image\" src={gen} />\r\n                    </div>\r\n                    <p class=\"text\"> I noticed that the API returns a feature called \"popularity\" for each artist, and have always been a little curious about whether the music I listen to is mainstream. To find out, I graphed the correlation between artist ranking and popularity: </p>\r\n                    <div class=\"imageContainer\">\r\n                        <img className=\"image\" src={pop} />\r\n                    </div>\r\n                    <p class=\"text\"> With an r-value of -0.44945735259442465, I'd say there is definitely a chance that this could be true. A negative r-value of this magnitude could imply that my more popular artists have higher popularity scores-- a.k.a. a negative correlation between personal preference and artist popularity. </p>\r\n                    <p class=\"text\"> <b> Modeling </b> </p>\r\n                    <p class=\"text\"> I personally have had a variety of hit-and-misses with Spotify's recommendations algorithm. When I saw that the API could return certain features of song tracks, I wanted to see if I could build myself a personalized                   recommendations algorithm using these features and the information that I know about my personal preferences. </p>\r\n                    <p class=\"text\"> The features for each track returned by the API include:\r\n                        <ul>\r\n                            <li>acousticness</li>\r\n                            <li>danceability</li>\r\n                            <li>energy</li>\r\n                            <li>instrumentalness</li>\r\n                            <li>key</li>\r\n                            <li>liveness</li>\r\n                            <li>loudness</li>\r\n                            <li>speechiness</li>\r\n                            <li>tempo</li>\r\n                            <li>time signature</li>\r\n                            <li>valence</li>\r\n                        </ul>\r\n                    </p>\r\n                    <p class=\"text\"> Using the API, I pulled 552 songs from my own playlists and my friends' playlists and added a 0 (dislike) and 1 (like) label to each song. I cleaned the data and prepared it for training, including changes such as:\r\n                        <ul>\r\n                        <li>one-hot-encoding the \"key\" column</li>\r\n                        <li>filling null values</li>\r\n                        <li>removing time signature as a feature after realizing most values were missing or redundant (i.e.\r\n                            all 4's) or incorrect (i.e. 0)</li>\r\n                        </ul>\r\n                    </p>\r\n                    <p class=\"text\">  Afterwards I did a 9:1 split of the data and trained a Logistic Regression model on the data using scikit-learn. With just these basic features, the model reached:\r\n                        <ul>\r\n                        <li>Training accuracy of 78.47%</li>\r\n                        <li>Validation accuracy of 71.43%</li>\r\n                        </ul>\r\n                    </p>\r\n                    <p class=\"text\"> Plotting the ROC curve of the model reveals: </p>\r\n                    <div class=\"imageContainer\">\r\n                        <img className=\"image\" src={roc} />\r\n                    </div>\r\n                    <p class=\"text\"> I also wanted to test how well the model responds to new data, so I created a completely new playlist of 40 songs I've never listened to before as a test set. After I listened to the songs and manually labeled them as gold labels, i then calculated the model's accuracy on the test dataset to be 65%.</p>\r\n                    <p class=\"text\"> This was not a statistically significant result (p=0.04), but the API was fun to implement and showed some promising results! Some ideas I have moving forward in the next iteration of this model are to add:\r\n                        <ul>\r\n                            <li>Add genre as a feature</li>\r\n                            <li>Add artist name as a feature</li>\r\n                            <li>Add album name as a feature</li>\r\n                            <li>Incorporate other APIs for more external information</li>\r\n                        </ul>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spotify;\r\n"]},"metadata":{},"sourceType":"module"}